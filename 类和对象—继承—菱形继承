#include<iostream>
using namespace std;
//动物类
class Animal {
public:
	int age;
};
//利用虚继承可以解决菱形继承的问题——virtual
// Animal类称为虚基类
//羊类
class Sheep:virtual public Animal {

};
//驼类
class Tuo :virtual public Animal {

};
//羊驼类
class SheepTuo :public Sheep, public Tuo {

};
void test01() {
	SheepTuo st;
	st.Sheep::age = 19;
	st.Tuo::age = 21;
	//当菱形继承时，两个父类拥有相同的数据，需要加以作用域进行区分
	cout << "st.Sheep::age = " << st.Sheep::age << endl;
	cout << "st.Tuo::age = " << st.Tuo::age << endl;
	cout << "st.age = " << st.age << endl;
	//这个数据我们知道，只有一份就可以，菱形继承导致数据有两份，资源浪费
	//利用虚继承可以解决菱形继承的问题——virtual
}
int main() {
	test01();
}
