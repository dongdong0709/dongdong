#include<iostream>
using namespace std;
class A {
public:
	A() {
		cout << "这是A类的构造函数" << endl;
	}
	~A() {
		cout << "这是A类的析构函数" << endl;
	}
};
class B :public A {
public:
	B() {
		cout << "这是B类的构造函数" << endl;
	}
	~B() {
		cout << "这是B类的析构函数" << endl;
	}
};
void test01() {
	//继承中的构造和析构顺序如下
	//先构造父类，再构造子类，析构的顺序与构造的顺序相反
	B b;
}
int main() {
	test01();
}
