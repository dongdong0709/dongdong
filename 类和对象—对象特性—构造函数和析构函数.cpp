////对象的初始化和清理
//#include<iostream>
//using namespace std;
//class Person {
//public:
//	//1.构造函数    语法：类名（）{ }
//    //构造函数，没有返回值也不写void
//    //函数名称与类名相同
//    //构造函数可以有参数，因此可以发生重载
//    //程序在调用对象时候会自动调用构造，无需手动调用，而且只会调用一次
//    Person() {
//        cout << "Person构造函数的调用" << endl;
//    }
//    //2.析构函数    语法：~类名（）{ }
//    //析构函数，没有返回值也不写void
//    //函数名称与类名相同，在名称前加上符号~
//    //析构函数不可以有参数，因此不可以发生重载
//    //程序在对象销毁前会自动调用析构，无需手动调用，而且只会调用一次
//    ~Person() {
//        cout << "Person析构函数的调用" << endl;
//    }
//
//};
////构造和析构都是必须有的实现，如果我们自己不提供，编译器会提供一个空实现的构造和析构
//void test01() {
//    Person p;   //在栈上的数据，test01执行完毕后，释放这个对象
//}
//int main() {
//   /* test01();*/
//    Person p;   //
//    system("pause"); 
//    return 0;
//}